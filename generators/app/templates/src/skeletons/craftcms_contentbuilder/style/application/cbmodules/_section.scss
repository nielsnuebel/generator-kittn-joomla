/*
  Section
  =======
  Subsegment of a content module, when the page wrapper is removed the section can run over the full browser width.
*/
.c-section {
  // Component Config
  $api: (
    gutter: (
      default: 10px,
      style1: 20px,
      style2: 20px,
      style3: 0
    ),
    columns: (
      twoColumns: (
        count: 2,
        groupname: 'child-2',
        breaksize: 600px,
        layout: (
          'cl-1-1': 50% 50%,
          'cl-1-2': 33.33% 66.66%,
          'cl-2-1': 66.66% 33.33%,
          'cl-3-1': 75% 25%,
          'cl-1-3': 25% 75%
        )
      ),
      threeColumns: (
        count: 3,
        breaksize: 800px,
        groupname: 'child-3',
        layout: (
          'cl-1-1-1': 33.33% 33.33% 33.33%,
          'cl-2-6-2': 20% 60% 20%,
          'cl-3-5-2': 30% 50% 20%,
          'cl-2-5-3': 20% 50% 30%
        )
      ),
      fourColumns: (
        count: 4,
        breaksize: 1000px,
        groupname: 'child-4',
        layout: (
          'cl-1-1-1-1': 20% 20% 20% 20%,
          'cl-2-3-4-1': 20% 30% 40% 10%,
          'cl-2-3-3-2': 20% 30% 30% 20%
        )
      )
    ),
    sizes: (
      'bigger-25': 1.25,
      'bigger-45': 1.45,
      'smaller-25': .75,
      'smaller-50': .5
    )
  );

  // ::::::::: ROOT SELECTOR
  $root: #{&};

  // ::::::::: API GRABBER
  @function api($keys...) {
    @return map-deep-get($api, $keys...);
  }

  // ::::::::: MODIFIER

  // Fullheight
  &--fullheight {
    #{$root}__row {
      min-height: 100vh;
    }
  }

  // Global Style Gutter
  @each $key, $gutter in api(gutter) {
    &--s-#{$key} {
      #{$root}__row {
        margin-left: 0 - $gutter;
        margin-right: 0 - $gutter;
      }

      #{$root}__column {
        padding-left: $gutter;
        padding-right: $gutter;
      }
    }
  }

  // ::::::::: CHILDS

  // [root]__container
  &__container {
    @extend %e-container;

    // Container Layouttypes
    // [root]--full
    &--full {
      width: 100%;
      max-width: inherit;
      padding-left: 0;
      padding-right: 0;
    }

    // Generate Container Sizes
    @each $sizeName, $containerSize in api(sizes) {
      &--#{$sizeName} {
        max-width: glob(pagesize, max) * $containerSize;
      }
    }
  }

  // [root]__row
  &__row {
    // Generate Column Layouts
    @each $columnStyleName, $setup in api(columns) {
      // Globlal Colum Layout
      &--child-#{map-deep-get($setup, count)} {
        @include break(map-deep-get($setup, breaksize)) {
          justify-content: stretch;
          display: flex;
        }
      }
    }

    // Reset Columns
    &--child-1 {
      display: block;
    }
  }

  // [root]__column
  &__column {
    margin-bottom: 10px;
    flex: 1 1 auto;
    position: relative;
    display: flex;

    *:last-child {
      margin-bottom: 0;
    }

    // [root]---empty
    @at-root {
      $e: #{&};

      &---empty {
        // Extend with the Parent Element
        @extend #{$e};
        margin-bottom: 0;
      }
    }

    /* stylelint-disable */
    @each $columnStyleName, $setup in api(columns) {
      @each $key, $column in map-deep-get($setup,layout) {
        &--#{$key} {
          @include break(map-deep-get($setup, breaksize)) {
            @for $i from 1 through length($column) {
              &:nth-of-type(#{$i}) {
                width: nth($column,$i);
              }
            }
          }
        }
      }
    }
    /* stylelint-enable */
  }

  // Inner Column Decrepated
  //&__inner {
  //  flex: 1 1 auto;
  //  position: relative;
  //  height: auto;
  //  width: 100%;
  //
  //  // Column inner Align
  //  &--align-left {
  //    text-align: left;
  //  }
  //
  //  &--align-center {
  //    text-align: center;
  //  }
  //
  //  &--align-right {
  //    text-align: right;
  //  }
  //
  //  // Column inner VerticalAlign
  //  &--valign-top {
  //    align-self: flex-start;
  //  }
  //
  //  &--valign-middle {
  //    align-self: center;
  //  }
  //
  //  &--valign-bottom {
  //    align-self: flex-end;
  //  }
  //}

  // [root]__bg
  &__bg {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    left: 50%;
    min-width: glob(pagesize, min);
    transform: translate(-50%);

    // Default Adapt size
    &--size-default {
      max-width: glob(pagesize, max);
    }

    // Generate Container Sizes
    @each $sizeName, $containerSize in api(sizes) {
      &--#{$sizeName} {
        max-width: glob(pagesize, max) * $containerSize;
      }
    }

    // [root]__bg__container
    &__container {
      height: 100%;

      // [root]__bg__container--size
      &--default {
        width: 100%;
      }

      // [root]--halfLeft
      &--halfLeft {
        width: 50%;
      }

      // [root]--halfRight
      &--halfRight {
        width: 50%;
        margin-left: 50%;
      }
    }

    // [root]__bg__background
    &__background {
      height: 100%;
      background-size: cover;
      background-repeat: no-repeat;
    }
  }
}
